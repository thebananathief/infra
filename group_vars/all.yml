---
# General
main_uid: "1000"
main_gid: "{{ main_uid }}"

appdata_path: /opt/appdata
home_path: /home/{{ ansible_user }}

# weareinteractive.environment
environment_config: { PUID: "{{ main_uid }}", PGID: "{{ main_gid }}" }
# geerlingguy.ntp
ntp_timezone: America/New_York

# geerlingguy.security https://github.com/geerlingguy/ansible-role-security/blob/master/defaults/main.yml
security_ssh_password_authentication: "no"
security_ssh_permit_root_login: "no"
security_ssh_usedns: "no"
security_ssh_permit_empty_password: "no"
security_ssh_challenge_response_auth: "no"
security_ssh_gss_api_authentication: "no"
security_ssh_x11_forwarding: "no"
security_autoupdate_enabled: true
security_autoupdate_reboot: "true"
security_autoupdate_reboot_time: "05:00"
security_autoupdate_mail_to: "{{ email_address }}"
security_fail2ban_enabled: true

# dj-wasabi.telegraf https://github.com/dj-wasabi/ansible-telegraf
telegraf_agent_omit_hostname: true
telegraf_agent_package_method: repo
telegraf_agent_package_state: latest

telegraf_agent_output:
  - type: influxdb_v2
    config:
      - urls = ["http://localhost:8086"]
      - organization = "default"
      - bucket = "telegraf"
      - token = "{{ influx_db_token }}"

# geerlingguy.docker
docker_packages_state: latest
# Prefer the compose plugin over the standalone binary
docker_install_compose_plugin: true
docker_install_compose: false
docker_compose_package_state: latest
docker_users:
  - "{{ main_username }}"
  # - telegraf

# ironicbadger.docker_compose_generator
global_env_vars:
  - PUID={{ main_uid }}
  - PGID={{ main_gid }}
  - TZ={{ ntp_timezone }}
docker_compose_generator_uid: "{{ main_uid }}"
docker_compose_generator_gid: "{{ main_gid }}"
docker_compose_generator_output_path: "{{ home_path }}"
compose_schema_version: "3.7"

# containers:
  # template for docker-compose services
  #
  ###
  # - service_name:
  #   active: false
  #   image:
  #   container_name: #optional - only required if diff to service_name
  #   labels:
  #     - traefik.enable=true
  #     - "traefik.http.routers.XXXXXXX.rule=Host(`abs.m.{{ main_domain }}`)"
  #     #- traefik.http.routers.XXXXXXX.entrypoints=websecure
  #     #- traefik.http.routers.XXXXXXX.tls.certresolver=cloudflare
  #     - traefik.http.services.XXXXXXX.loadbalancer.server.port=80
  #     #- traefik.http.routers.XXXXXXX.middlewares=authelia@docker
  #   volumes:
  #     - "{{ appdata_path }}/app:/config"
  #   user: "{{ main_uid }}"
  #   environment:
  #     -
  #   include_global_env_vars: #optional - defaults to false
  #   restart: unless-stopped
